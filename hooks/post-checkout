#!/bin/bash
set -euo pipefail

# Set Base Working Directory
basedir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"

. "$basedir/lib/commit_summary.bash"

echo "--- Sending Hangouts Message"

WEBHOOK_URL="${BUILDKITE_PLUGIN_HANGOUTS_CHAT_WEBHOOK_URL?}"
CHAT_URL=${BUILDKITE_PLUGIN_HANGOUTS_CHAT_CHAT_ENDPOINT?}
MESSAGE=$(echo "${BUILDKITE_PLUGIN_HANGOUTS_CHAT_MESSAGE?}" | envsubst)
TYPE=${BUILDKITE_PLUGIN_HANGOUTS_CHAT_TYPE}
CARD_DETAILS=${BUILDKITE_PLUGIN_HANGOUTS_CHAT_CARD_DETAILS}
ROWS=$(echo "${BUILDKITE_PLUGIN_HANGOUTS_CHAT_ROWS?}" | envsubst)


if [[ "${BUILDKITE_PLUGIN_HANGOUTS_CHAT_DEBUG:-false}" =~ (true|on|1) ]] ; then
  echo "--- :hammer: Enabling debug mode"
  set -x
fi

if [[ "${BUILDKITE_PLUGIN_HANGOUTS_CHAT_COMMIT_SUMMARY_ENABLED:-false}" =~ (true|on|1) ]] ; then
    # Generate Commit based message
    BK_FROM_COMMIT="${BUILDKITE_PLUGIN_HANGOUTS_CHAT_COMMIT_SUMMARY_FROM_COMMIT}"
    BK_TO_COMMIT="${BUILDKITE_PLUGIN_HANGOUTS_CHAT_COMMIT_SUMMARY_TO_COMMIT}"
    SUMMARY_LOG=$(commit_summary "$BK_FROM_COMMIT" "$BK_TO_COMMIT")

    MESSAGE="${MESSAGE} ${SUMMARY_LOG}"
fi

CURRENT_COMMIT=$(git rev-parse HEAD)
THREAD_KEY=${BUILDKITE_PLUGIN_HANGOUTS_CHAT_THREAD_KEY:=$CURRENT_COMMIT}

KEYVALUE_JSON="none"

IFS=| read -r CARD_TITLE CARD_SUBTITLE BUILD_URL <<< "$CARD_DETAILS"

# Create a list of JSON objects to display the rows in the hangouts card
IFS=';' read -ra DETAILS <<< "$ROWS"
for i in "${DETAILS[@]}"; do
    IFS=| read -r ROW_TITLE ROW_INFO ROW_URL <<< "$i"
    KEYVALUE_LIST+=('{ "keyValue":{ "topLabel":"'"$ROW_TITLE"'","content":"'"$ROW_INFO"'","button":{ "textButton":{ "text":"OPEN REPORT","onClick":{ "openLink":{ "url":"'"$ROW_URL"'"}}}}}}')
done

for c in "${KEYVALUE_LIST[@]}"; do
  if [ $KEYVALUE_JSON = "none" ]
  then
    KEYVALUE_JSON=$c
  else
    KEYVALUE_JSON=$KEYVALUE_JSON,$c
  fi
done

# Putting the JSON card together for hangouts
HANGOUTS_CARD_JSON='{"cards":[{"header":{"title":"'"$CARD_TITLE"'","subtitle":"'"$CARD_SUBTITLE"'"},"sections":[{"widgets":['"$KEYVALUE_JSON"']},{"widgets":[{"buttons":[{"textButton":{"text":"GO TO BUILD","onClick":{"openLink":{"url":"'"$BUILD_URL"'"}}}}]}]}]}]}'


if [ $TYPE == 'CARD' ]
then
  curl -v --location --request POST "${WEBHOOK_URL}" \
  -H 'Content-Type: application/json' \
  -d ' '"${HANGOUTS_CARD_JSON}"' '

else
  curl -v -X "POST" "${CHAT_URL}" \
       -H 'Content-Type: application' \
       -d $'{ "webhook": "'"${WEBHOOK_URL}"'",
  "threadkey":"'"${THREAD_KEY}"'",
  "message": "'"${MESSAGE}"'"
  }
  '

fi
